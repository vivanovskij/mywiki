[[/index|Main]]


= Git =
Настройка данных пользователя
(Параметр --global устанавливает данные для всей системы, без него настраивается
текущий проект)
git config --global user.name {name}
git config --global user.email {email}

Инициализация проекта
---------------------
git init

Добавление файлов
-----------------
git add .
git add *.py
git add file
git add folder/
git add !folder/file (Добавить папку кроме файла)

Удаление файлов
---------------
удалить из файловой системы
git rm {file}
удалить из репозитория, но оставить в файловой системе
git rm --cached {file}
(изменения будут после коммита)


Проверка состояния
------------------
git status

Закрепление
-----------
git commit -m "{Comment}"

Посмотреть журнал изменений проекта
-----------------------------------
git log (Развёрнутый)
git log --oneline (Сокращённый)

Посмотреть предыдущее состояние проекта
---------------------------------------
git checkout {commit_id} (commit_id - индетификатор коммита)

Отменить определённый commit
----------------------------
git revert {commit_id}

Удалить все изменения после определённого коммита
-------------------------------------------------
git reset {commit_id} (проект не возвращается к исходному состоянию)
git reset {commit_id} --hard (проект возвращается к исходному сост.)

Создание веток
--------------
git branch {name} (создать ветку)
git checkout -b {name} (создать ветку и перейти на неё)
git checkout {name} (перейти на ветку)
git branch -a (вывести список веток)

Слияние веток
-------------
git checkout master (сначала перейти на ветку master)
git merge {name} (затем объединяем с нужной веткой)



== Github == 
Подключение к репозиторию
-------------------------
git remote add <name> <url> (<name> это имя ветки, напр. origin <url> это ссылка на репозиторий)

Просмотр к какому репозиторию подключены
----------------------------------------
git remote

Отправить проект на удалённый репозиторий
-----------------------------------------
git push -u origin master

Клонировать репозиторий
-----------------------
git clone {url} ({url} это адрес репозитория)

Скачать изменения в репозитории
-------------------------------
git pull

Файл README.md 
---------------
md значит markdown (разметка). Справка https://www.markdownguide.org/basic-syntax/

Подключение по SSH
------------------

Папка
~/.ssh

Сгенерировать ключи
-------------------
ssh-keygen

~/.ssh/id_rsa (Приватные ключи)
~/.ssh/id_rsa.pub (Публичные ключи)

Скопировать id_rsa.pub

В профиле github.com Settings > SSH and GPG keys > New SSH key
В поле title название ключа (напр. Linux SSH key)
В поле key вставить скопированный ранее ключ

При клонировании проектов нужно использовать ssh ссылку

Посмотреть ссылку подключения
-----------------------------
git remote -v

Если в проекте уже установлена обычная https ссылка, то
-------------------------------------------------------
изменить на ssh
git remote set-url origin {ssh_link}
