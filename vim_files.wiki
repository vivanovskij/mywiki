[[index|Main]]
[[vim|Back]]


        == Файлы ==

:edit {file}    Открыть файл
:edit %<Tab>    % подставит путь к файлу в активном буфере
:edit %:h<Tab>  модификатор :h удалит имя файла, оставив 
                путь к нему

Прописать в .vimrc: 
cnoremap <expr> %% getcmdtype() == ":" ? expand('%:h').'/' : '%%'
и последовательность %% в командной строке Vim будет замещаться путем к каталогу, где хранится активный файл, как если бы ввели %:h<Tab>

:find {file}<Tab>   открытие файла по его имени без 
                    неоходимости указывать пути к нему
                    (присвоив параметру wildmode другое
                    значение, отличное от значения по 
                    умолчанию full, можно наблюдать
                    иное поведение автодополнения)

:set path+={path}   добавить каталог для поиска find
:set path+=app/**   ** соотв. всем подкаталогам,   
                    вложенным в каталог app/


        == netrw - встроенный обозреватель файлов ==

Расширение netrw распространяется в составе стандартного дистрибутива Vim. Чтобы настроить нужно добавить в файл .vimrc:
set nocompatible
filetype plugin on

Если запустить Vim, передав ему путь к каталогу, а не к файлу, он откроет окно обозревателя файлов.

-           перейти в родительский каталог

Осуществлять навигацию по содержимому каталога можно не только с помощью клавиш j и k. Поддерживаются также все команды перемещения курсора, доступные в обычных буферах Vim. Например, можно выполнить поиск /{file}.

Открыть окно обозревателя файлов можно командой :edit {path}, передав в аргументе {path} имя каталога (вместо файла). Символ точки (.) соответствует текущему рабочему каталогу.

Если потребуется открыть в обозревателе каталог, где находится текущий файл, это можно сделать с помощью команды :edit %:h (:edit %%).

:edit .     :e .    откроет текущий каталог
:Explore    :E      откроет каталог текущего файла
:Sexplore   :Se     то же, в новом окне разбив по гориз.
:Vexplore   :Ve     то же, разбив по вертикали
